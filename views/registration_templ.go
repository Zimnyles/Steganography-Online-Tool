// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "stegano-webapp/steagano-webapp/views/layout"
import "stegano-webapp/steagano-webapp/views/components"

func Registration() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = RegistrationStyle().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, " <div class=\"title-wrapper\"><h1 class=\"title\">Регистрация</h1></div><div id=\"reg-result\"></div><div class=\"reg-form--wrapper\"><form hx-ext=\"response-targets\" hx-post=\"/api/registration\" hx-trigger=\"submit\" class=\"reg-form\" hx-target-error=\"#reg-result\" hx-swap=\"innerHTML\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = components.Input(components.InputProps{
				Name:        "login",
				Placeholder: "Придумайте псевдоним",
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = components.Input(components.InputProps{
				Name:        "email",
				Placeholder: "Email",
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = components.Input(components.InputProps{
				Name:        "password",
				Placeholder: "Пароль",
				Type:        "password",
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<button class=\"submit-button\"><span class=\"post-form__submit\">Зарегестрироваться</span></button><div class=\"separator\">ИЛИ</div></form><button class=\"log-button\"><a href=\"login\" class=\"link\"><span>Войти</span></a></button></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layout.Layout(layout.LayoutProps{
			Title:           "Регистрация",
			MetaDescriptiom: "Регистрация",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func RegistrationStyle() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<style>\r\n    a{\r\n        text-decoration: none;\r\n    }\r\n\r\n    span{\r\n        text-decoration: none;\r\n        color: var(--color-white);\r\n    }\r\n    .separator {\r\n    display: flex;\r\n    align-items: center;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    margin-top: 0;\r\n    color: var(--color-white);\r\n    font-size: 20px;\r\n    }\r\n\r\n    .separator::before,\r\n    .separator::after {\r\n    content: '';\r\n    flex: 1;\r\n    border-bottom: 1px solid #ffffff;\r\n    }\r\n\r\n    .separator:not(:empty)::before {\r\n\r\n    margin-right: .25em;\r\n    }\r\n\r\n    .separator:not(:empty)::after {\r\n    margin-left: .25em;\r\n    \r\n    }\r\n\r\n    .log-button{\r\n        height: 80px;\r\n        padding: 15px 20px;\r\n        background-color: #303030; \r\n        color: var(--color-white);\r\n        border-radius: 20px;\r\n        cursor: pointer;\r\n        border: none;\r\n        font-size: 18px;\r\n        font-style: normal;\r\n        font-weight: 600;\r\n        width: 100%;\r\n        gap: 30px;\r\n        width: 100%;\r\n        max-width: 520px;\r\n    }\r\n\r\n    .reg-form--wrapper{\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .submit-button{\r\n        \r\n        height: 80px;\r\n        padding: 15px 20px;\r\n        background-color: #80d49c;\r\n        color: var(--color-white);\r\n        border-radius: 20px;\r\n        cursor: pointer;\r\n        border: none;\r\n        font-size: 18px;\r\n        font-style: normal;\r\n        font-weight: 600;\r\n        width: 100%;\r\n\r\n    }\r\n\r\n    #reg-result{\r\n        margin-bottom: 30px;\r\n        }\r\n\r\n    .reg-form{\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 30px;\r\n        width: 100%;\r\n        max-width: 520px;\r\n        margin-bottom: 30px;\r\n    }\r\n\r\n    .title-wrapper{\r\n        text-align: center;\r\n        margin-left: 100px;\r\n        margin-right: 100px;\r\n        margin-top: 20px;\r\n        border-bottom: 1px solid rgb(222, 222, 222);\r\n        \r\n    }\r\n    \r\n\r\n    .title{\r\n        font-weight: bold;\r\n        margin-bottom:12px;\r\n        margin-top: 0;\r\n        color: var(--color-white);\r\n        font-size: 70px;\r\n    }\r\n</style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
